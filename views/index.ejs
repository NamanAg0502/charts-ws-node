<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Real-Time Chart</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  </head>
  <body>
    <div class="chart-container">
      <canvas id="rtchart"></canvas>
    </div>
    <script>
        const formatDate = (date) => {
          const year = date.getFullYear();
          const month = date.getMonth() + 1;
          const day = date.getDate();
          return `${year}-${month}-${day}`;
        };

        const initialData = <%- JSON.stringify(data) %>;
        const dates = initialData.map((row) => formatDate(new Date(row.date)));
        const openPrices = initialData.map((row) => row.open);
        const closePrices = initialData.map((row) => row.close);

      //   // Set up Chart.js
        const ctx = document.getElementById("rtchart").getContext("2d");
        const myChart = new Chart(ctx, {
          type: "bar", // or 'pie'
          data: {
            labels: dates,
            datasets: [
              {
                label: "Opening Prices",
                data: openPrices,
                backgroundColor: "rgba(75, 192, 192, 0.2)",
                borderColor: "rgba(75, 192, 192, 1)",
                borderWidth: 1,
              },
              {
                label: "Closing Prices",
                data: closePrices,
                backgroundColor: "rgba(153, 102, 255, 0.2)",
                borderColor: "rgba(153, 102, 255, 1)",
                borderWidth: 1,
              },
            ],
          },
          options: {
            scales: {
              y: {
                beginAtZero: false,
              },
            },
          },
        });

      // WebSocket for real-time updates
      const socket = new WebSocket("ws://localhost:3000");

      socket.onmessage = function (event) {
        const updatedData = JSON.parse(event.data);
        const formattedDate = formatDate(new Date(updatedData.date));

        if (myChart.data.labels.includes(formattedDate)) {
          const index = myChart.data.labels.indexOf(formattedDate);
          myChart.data.datasets[0].data[index] = updatedData.open;
          myChart.data.datasets[1].data[index] = updatedData.close;
        } else {
          myChart.data.labels.push(formattedDate);
          myChart.data.datasets[0].data.push(updatedData.open);
          myChart.data.datasets[1].data.push(updatedData.close);
        }
        myChart.update();
      };

      socket.onerror = (error) => {
        console.error("WebSocket error:", error);
      };

      socket.onclose = () => {
        console.log("WebSocket connection closed");
      };
    </script>
  </body>
</html>
